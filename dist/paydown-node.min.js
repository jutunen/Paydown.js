function Paydown(){this.calculate=function(t,e,i,r){var n=new _Paydown;n.set_init(t);var a,_,s,h,o,d,u,l,c=[];e&&(c=e.slice());for(;c[0];)n.check_and_add_event(c.shift());try{[a,_,s,h,o,d,u]=n.calculate_to_date(i,r)}catch(t){throw t}if(t.hasOwnProperty("round_values"))if(t.round_values){l=func_round(a+_-d);a=func_round(a);_=func_round(_);s=func_round(s);d=func_round(d);u=func_round(u)}else l=a+_-d;else{l=func_round(a+_-d);a=func_round(a);_=func_round(_);s=func_round(s);d=func_round(d);u=func_round(u)}return{sum_of_interests:a,sum_of_reductions:_,sum_of_installments:l,remaining_principal:s,days_calculated:n.total_number_of_days,actual_end_date:zero_fill_date(h),latest_payment_date:zero_fill_date(o),unpaid_interest:d,sum_of_fees:u}}}function _Paydown(){this.event_array=[];this.sum_of_interests=0;this.sum_of_reductions=0;this.latest_calculated_interest_date="";this.latest_payment_date="";this.current_rate="";this.current_recurring_payment=null;this.current_principal="";this.g_p_i_sum_of_interests=0;this.total_number_of_days=0;this.g_p_i_total_days=0;this.payment_log_array=[];this.debug_log_array=[];this.day_count_divisor=0;this.latest_period_end_date=0;this.init={};this.round_values=!0;this.initial_fee=0;this.sum_of_fees=0;this.current_recurring_fee=0;this.current_single_fee=0;this.recurring_payment_period=1;this.rateHashMap={};this.round=function(t){if("number"!=typeof t||isNaN(t))throw new Error("this.round illegal parameter type");this.round_values&&(t=func_round(t));return t};this.log_payment=function(t){if(this.payment_logging_enabled){10!==t[0].length&&(t[0]=zero_fill_date(t[0]));this.payment_log_array.push(t)}};this.get_period_interests=function(t,e,i,r){var n,a=0;if(!t)throw new Error("this.get_period_interests invalid parameter: principal");if(!i)throw new Error("this.get_period_interests invalid parameter: start_date");if(!r)throw new Error("this.get_period_interests invalid parameter: end_date");if(date_to_integer(i)>date_to_integer(r))throw new Error("this.get_period_interests invalid date: start_date "+i+" is after end_date "+r);if(this.latest_period_end_date){1!==calculate_day_count(this.latest_period_end_date,i,!0)&&throw_unexpected_exception("Date difference is not one day as expected, latest_period_end_date: "+this.latest_period_end_date+" start_date: "+i)}var _=calculate_day_count(i,r);this.total_number_of_days+=_;this.debug_logging_enabled&&this.debug_log_period_start(i,_,t,e);if(this.rateHashMap.hasOwnProperty(date_to_integer(i))){e=this.rateHashMap[date_to_integer(i)];this.log_payment([i,e,"-","-","-",this.round(t),"-"])}this.debug_logging_enabled&&this.debug_log("Interest rate: "+e);if(n=this.get_first_event_after_date("rate",i,r)){for(var s,h,o=i,d=n.date,u=e;n;){s=calculate_day_count(o,d,!0);this.g_p_i_total_days+=s;h=t*(u/100)*(s/this.day_count_divisor);this.debug_logging_enabled&&this.debug_log_subperiod(s,h,n.date,n.rate);a+=h;u=n.rate;this.log_payment([n.date,n.rate,"-","-","-",this.round(t),"-"]);o=d;(n=this.get_first_event_after_date("rate",d,r))&&(d=n.date)}s=calculate_day_count(d,r);this.g_p_i_total_days+=s;h=t*(u/100)*(s/this.day_count_divisor);this.debug_logging_enabled&&this.debug_log_subperiod(s,h);a+=h;this.current_rate=u}else{s=calculate_day_count(i,r);this.g_p_i_total_days+=s;h=t*(e/100)*(s/this.day_count_divisor);this.debug_logging_enabled&&this.debug_log("Period daily interest: ",h/s);a+=h;this.current_rate=e}this.debug_logging_enabled&&this.debug_log("Period total interest: ",a);this.g_p_i_sum_of_interests+=a;this.latest_period_end_date=r;return a};this.get_first_event_after_date=function(t,e,i){for(var r=0;r<this.event_array.length;r++){if(date_to_integer(this.event_array[r].date)>date_to_integer(e)&&this.event_array[r].hasOwnProperty(t)&&date_to_integer(this.event_array[r].date)<=date_to_integer(i))return this.event_array[r];if(date_to_integer(this.event_array[r].date)>date_to_integer(i))return!1}return!1};this.check_if_date_has_event=function(t,e){for(var i=0;i<this.event_array.length;i++)if(date_to_integer(this.event_array[i].date)===date_to_integer(e))return!!this.event_array[i].hasOwnProperty(t)&&this.event_array[i];return!1};this.check_date=function(t,e){e||(e="");if(!t)throw new Error("this.check_date: "+e+" date is missing");if("string"!=typeof t)throw new Error("this.check_date: "+e+" date must be of type string: "+t);if(!check_date_validity(t))throw new Error("this.check_date: "+e+" date is invalid: "+t)};this.handle_last_payment=function(t,e,i,r=0){var n;t+=this.current_principal;n=this.round(t+i);this.sum_of_reductions+=t;this.log_payment([e,this.current_rate,n,this.round(t),this.round(i),0,this.round(r)]);this.current_principal=0;this.latest_payment_date=e};this.func_pay_installment=function(t,e,i,r=0){var n,a,_,s;if(this.latest_calculated_interest_date===this.event_array[t].date)n=0;else{_=e.set_current(this.latest_calculated_interest_date).get_next();s=this.event_array[t].date;n=this.get_period_interests(this.current_principal,this.current_rate,_,s)}if((a=0===i?0:i-n)<0)throw new Error("Exception: installment "+this.round(i)+" is too small to cover the interest "+this.round(n)+": "+_+" - "+s);this.sum_of_interests+=n;this.current_principal-=a;this.latest_calculated_interest_date=this.event_array[t].date;this.latest_payment_date=this.event_array[t].date;if(this.current_principal<=0){this.handle_last_payment(a,this.event_array[t].date,n,r);return!1}this.sum_of_reductions+=a;this.log_payment([this.event_array[t].date,this.current_rate,this.round(a+n),this.round(a),this.round(n),this.round(this.current_principal),this.round(r)]);return!0};this.func_pay_reduction=function(t,e,i,r=0){var n;n=this.latest_calculated_interest_date===this.event_array[t].date?0:this.get_period_interests(this.current_principal,this.current_rate,e.set_current(this.latest_calculated_interest_date).get_next(),this.event_array[t].date);this.sum_of_interests+=n;this.current_principal-=i;this.latest_calculated_interest_date=this.event_array[t].date;this.latest_payment_date=this.event_array[t].date;if(this.current_principal<=0){this.handle_last_payment(i,this.event_array[t].date,n,r);return!1}this.sum_of_reductions+=i;this.log_payment([this.event_array[t].date,this.current_rate,this.round(i+n),this.round(i),this.round(n),this.round(this.current_principal),this.round(r)]);return!0};this.calculate_to_date=function(t,e){var i,r,n,a=0;if("number"!=typeof this.init.principal||isNaN(this.init.principal))throw new Error("this.calculate_to_date: principal must be number");if(0===this.init.principal)throw new Error("this.calculate_to_date: principal is missing");if("number"!=typeof this.init.rate||isNaN(this.init.rate))throw new Error("this.calculate_to_date: rate must be number");Array.isArray(t)?this.payment_logging_enabled=!0:this.payment_logging_enabled=!1;Array.isArray(e)?this.debug_print_to_console=!1:this.debug_print_to_console=!0;this.sum_of_interests=0;this.sum_of_reductions=0;this.g_p_i_sum_of_interests=0;var _=new _Days;this.check_date(this.init.start_date,"start");this.check_date(this.init.end_date,"end");if(null!==this.current_recurring_payment){this.check_first_payment_date();this.generate_payment_events_till(this.init.end_date)}this.add_event({date:this.init.end_date,ending:!0});this.merge_events();this.check_events();if("act/360"===this.init.day_count_method)this.day_count_divisor=360;else{if("act/365"!==this.init.day_count_method)throw new Error("invalid day count method: "+this.init.day_count_method);this.day_count_divisor=365}this.latest_calculated_interest_date=_.set_current(this.init.start_date).get_prev();this.latest_period_end_date=this.latest_calculated_interest_date;this.total_number_of_days=0;this.g_p_i_total_days=0;this.log_payment([this.init.start_date,this.init.rate,"-","-","-",this.init.principal,this.initial_fee]);this.current_principal=this.init.principal;this.current_rate=this.init.rate;this.sum_of_fees=this.initial_fee;for(i=0;i<this.event_array.length;i++){if(this.event_array[i].hasOwnProperty("recurring_amount")){if(null===this.current_recurring_payment)throw new Error("Can't do recurring_amount: initial recurring data missing or invalid!");this.current_recurring_payment=this.event_array[i].recurring_amount}if(this.event_array[i].hasOwnProperty("recurring_fee_amount")){if(null===this.current_recurring_payment)throw new Error("Can't do recurring_fee_amount: initial recurring data missing or invalid!");this.current_recurring_fee=this.event_array[i].recurring_fee_amount}if(this.event_array[i].hasOwnProperty("pay_single_fee")){this.sum_of_fees+=this.event_array[i].pay_single_fee;this.current_single_fee=this.event_array[i].pay_single_fee}else this.current_single_fee=0;if(this.event_array[i].hasOwnProperty("payment_method"))if("equal_installment"===this.event_array[i].payment_method)this.init.payment_method="equal_installment";else{if("equal_reduction"!==this.event_array[i].payment_method)throw new Error("invalid payment method in event: "+this.event_array[i].payment_method);this.init.payment_method="equal_reduction"}if(this.event_array[i].hasOwnProperty("pay_recurring")){if(null===this.current_recurring_payment)throw new Error("Can't do pay_recurring: initial recurring data missing or invalid!");this.sum_of_fees+=this.current_recurring_fee;if("equal_installment"===this.init.payment_method){if(!this.func_pay_installment(i,_,this.current_recurring_payment,this.current_recurring_fee))break}else{if("equal_reduction"!==this.init.payment_method)throw new Error("invalid payment method: "+this.init.payment_method);if(!this.func_pay_reduction(i,_,this.current_recurring_payment,this.current_recurring_fee))break}}if(this.event_array[i].hasOwnProperty("pay_reduction")&&this.event_array[i].hasOwnProperty("pay_installment"))throw new Error("main loop error: event can not have more than one single payment on "+this.event_array[i].date);if(this.event_array[i].hasOwnProperty("pay_reduction")){r=this.event_array[i].pay_reduction;if(!this.func_pay_reduction(i,_,r,this.current_single_fee))break}else if(this.event_array[i].hasOwnProperty("pay_installment")){n=this.event_array[i].pay_installment;if(!this.func_pay_installment(i,_,n,this.current_single_fee))break}else if(this.current_single_fee&&!this.event_array[i].hasOwnProperty("ending")){this.log_payment([this.event_array[i].date,this.current_rate,"-","-","-",this.round(this.current_principal),this.round(this.current_single_fee)]);this.current_single_fee=0}if(this.event_array[i].hasOwnProperty("ending")){if(this.event_array[i].hasOwnProperty("pay_reduction")||this.event_array[i].hasOwnProperty("pay_recurring")||this.event_array[i].hasOwnProperty("pay_installment"))this.latest_calculated_interest_date=this.latest_payment_date;else{a=this.get_period_interests(this.current_principal,this.current_rate,_.set_current(this.latest_calculated_interest_date).get_next(),this.event_array[i].date);this.sum_of_interests+=a;this.log_payment([this.event_array[i].date,this.current_rate,"-","-",this.round(a),this.round(this.current_principal),this.round(this.current_single_fee)]);this.latest_calculated_interest_date=this.init.end_date}break}}this.round(this.g_p_i_sum_of_interests)!==this.round(this.sum_of_interests)&&throw_unexpected_exception("Sum of interests mismatch: "+this.round(this.g_p_i_sum_of_interests)+" vs. "+this.round(this.sum_of_interests));this.g_p_i_total_days!==this.total_number_of_days&&throw_unexpected_exception("Day count mismatch, this.g_p_i_total_days: "+this.g_p_i_total_days+" this.total_number_of_days: "+this.total_number_of_days);if(this.payment_logging_enabled)for(let e=0;e<this.payment_log_array.length;e++)t.push(this.payment_log_array[e]);if(this.debug_logging_enabled&&!this.debug_print_to_console)for(let t=0;t<this.debug_log_array.length;t++)e.push(this.debug_log_array[t]);return[this.sum_of_interests,this.sum_of_reductions,this.current_principal,this.latest_calculated_interest_date,this.latest_payment_date,a,this.sum_of_fees]};this.set_init=function(t){if("object"!=typeof t||null===t)throw new Error("this.set_init: invalid or missing init_obj");this.init.start_date=t.start_date;this.init.end_date=t.end_date;this.init.principal=t.principal;this.init.rate=t.rate;t.hasOwnProperty("day_count_method")?this.init.day_count_method=t.day_count_method:this.init.day_count_method="act/360";if(t.hasOwnProperty("recurring")){if(!t.recurring.hasOwnProperty("amount")||!number_is_valid(t.recurring.amount))throw new Error("this.set_init: invalid or missing recurring amount");this.current_recurring_payment=t.recurring.amount;if(!t.recurring.hasOwnProperty("first_payment_date"))throw new Error("this.set_init: missing first recurring payment date");this.init.first_payment_date=t.recurring.first_payment_date;if(!t.recurring.hasOwnProperty("payment_day")||!number_is_valid(t.recurring.payment_day)||t.recurring.payment_day<1||t.recurring.payment_day>31||!Number.isInteger(t.recurring.payment_day))throw new Error("this.set_init: invalid or missing first payment_day number");this.init.payment_day=t.recurring.payment_day;t.recurring.hasOwnProperty("payment_method")?this.init.payment_method=t.recurring.payment_method:this.init.payment_method="equal_installment";if(t.recurring.hasOwnProperty("payment_fee")){if(!number_is_valid(t.recurring.payment_fee))throw new Error("this.set_init: invalid recurring payment_fee");this.current_recurring_fee=t.recurring.payment_fee}if(t.recurring.hasOwnProperty("payment_period")){if(!number_is_valid(t.recurring.payment_period)||t.recurring.payment_period>12||!Number.isInteger(t.recurring.payment_period))throw new Error("this.set_init: invalid recurring payment_period");this.recurring_payment_period=t.recurring.payment_period}}else this.current_recurring_payment=null;t.hasOwnProperty("round_values")?this.round_values=t.round_values:this.round_values=!0;t.hasOwnProperty("debug_logging")?this.debug_logging_enabled=t.debug_logging:this.debug_logging_enabled=!1;if(t.hasOwnProperty("initial_fee")){if(!number_is_valid(t.initial_fee))throw new Error("this.set_init: invalid initial fee");this.initial_fee=t.initial_fee}else this.initial_fee=0};this.check_and_add_event=function(t){if(!t.hasOwnProperty("date"))throw new Error("this.add_event: date missing from event");this.check_date(t.date,"event");if(t.hasOwnProperty("rate")&&(isNaN(t.rate)||"number"!=typeof t.rate))throw new Error("this.check_and_add_event: invalid rate in event "+t.date);if(t.hasOwnProperty("recurring_amount")&&!number_is_valid(t.recurring_amount))throw new Error("this.check_and_add_event: invalid recurring_amount in event "+t.date);if(t.hasOwnProperty("pay_installment")&&("number"!=typeof t.pay_installment||t.pay_installment<=0||isNaN(t.pay_installment)))throw new Error("this.check_and_add_event: invalid pay_installment in event "+t.date);if(t.hasOwnProperty("pay_reduction")&&("number"!=typeof t.pay_reduction||t.pay_reduction<=0||isNaN(t.pay_reduction)))throw new Error("this.check_and_add_event: invalid pay_reduction in event "+t.date);if(t.hasOwnProperty("recurring_fee_amount")&&!number_is_valid(t.recurring_fee_amount))throw new Error("this.check_and_add_event: invalid recurring_fee_amount in event "+t.date);if(t.hasOwnProperty("pay_single_fee")&&!number_is_valid(t.pay_single_fee))throw new Error("this.check_and_add_event: invalid pay_single_fee in event "+t.date);this.event_array.push(Object.assign({},t))};this.add_event=function(t){if(!t.hasOwnProperty("date"))throw new Error("this.add_event: date missing from event");this.event_array.push(Object.assign({},t))};this.merge_events=function(){this.event_array.sort(event_array_sorter);for(var t=0;t<this.event_array.length-1;t++){this.event_array[t].hasOwnProperty("rate")&&(this.rateHashMap[date_to_integer(this.event_array[t].date)]=this.event_array[t].rate);if(date_to_integer(this.event_array[t].date)===date_to_integer(this.event_array[t+1].date)){Object.assign(this.event_array[t],this.event_array[t+1]);this.event_array.splice(t+1,1);t-=1}}};this.check_first_payment_date=function(){this.check_date(this.init.first_payment_date,"1st recurring payment");if(date_to_integer(this.init.first_payment_date)<=date_to_integer(this.init.start_date))throw new Error("this.check_first_payment_date: first payment date must be after start date")};this.generate_payment_events_till=function(t){var e=new _Days(this.init.first_payment_date),i={date:e.get_current(),pay_recurring:!0};this.add_event(i);for(;date_to_integer(e.get_nth_month_nth_day(this.recurring_payment_period,this.init.payment_day))<=date_to_integer(t);){i={date:e.get_current(),pay_recurring:!0};this.add_event(i)}};this.check_events=function(){for(var t=0;t<this.event_array.length-1;t++)if(date_to_integer(this.event_array[t].date)<=date_to_integer(this.init.start_date))throw new Error("this.check_events: event date ("+this.event_array[t].date+") before start date not allowed")};this.debug_log_period_start=function(t,e,i,r){this.debug_write("New period starts "+t);this.debug_write("Days in period: "+e);this.debug_write("Remaining principal: "+this.round(i))};this.debug_log_subperiod=function(t,e,i,r){this.debug_write("Subperiod days: "+t);this.debug_write("Subperiod daily interest: "+this.round(e/t));this.debug_write("Subperiod total interest: "+this.round(e));i&&this.debug_write("Rate changes "+i+", new rate is "+r)};this.debug_log=function(t,e){is_numeric(e)?this.debug_write(t,this.round(e)):this.debug_write(t)};this.debug_write=function(t,e=""){this.debug_print_to_console?console.log(t,e):this.debug_log_array.push(t+e)}}function _Days(t){if(t){this.date=t;this.split_table=this.date.split(".");this.day=Number(this.split_table[0]);this.month=Number(this.split_table[1]);this.year=Number(this.split_table[2])}this.get_current=function(){return zero_fill(this.day)+"."+zero_fill(this.month)+"."+this.year};this.set_current=function(t){this.split_table=t.split(".");this.day=Number(this.split_table[0]);this.month=Number(this.split_table[1]);this.year=Number(this.split_table[2]);return this};this.get_next=function(){var t=new Date(this.year,this.month-1,this.day);t.setDate(t.getDate()+1);this.day=String(t.getDate());this.month=String(t.getMonth()+1);this.year=String(t.getFullYear());return zero_fill(this.day)+"."+zero_fill(this.month)+"."+this.year};this.get_prev=function(){var t=new Date(this.year,this.month-1,this.day);t.setDate(t.getDate()-1);this.day=String(t.getDate());this.month=String(t.getMonth()+1);this.year=String(t.getFullYear());return zero_fill(this.day)+"."+zero_fill(this.month)+"."+this.year};this.get_nth_month_nth_day=function(t,e){if(1===t&&(31===e||1===this.month&&e>28))return this.get_next_month_last_day();var i=this.month+t,r=this.year;if(i>12){i-=12;++r}this.day=31===e?days_in_month(i,r):e;this.month=i;this.year=r;return zero_fill(e)+"."+zero_fill(i)+"."+r};this.get_next_month_last_day=function(){var t=this.month,e=this.year;if(12===t){t=1;++e}else++t;var i=days_in_month(t,e);this.day=i;this.month=t;this.year=e;return i+"."+zero_fill(this.month)+"."+this.year}}function throw_unexpected_exception(t){throw new Error("Unexpected exception: "+t)}function event_array_sorter(t,e){return date_to_integer(t.date)>date_to_integer(e.date)?1:date_to_integer(t.date)<date_to_integer(e.date)?-1:0}function date_to_integer(t){var e=split_date(t)[0],i=split_date(t)[1],r=split_date(t)[2];e=zero_fill(Number(e));i=zero_fill(Number(i));return Number(r+i+e)}function zero_fill_date(t){if("string"!=typeof t)throw new Error("zero_fill_date illegal parameter type");if(!t)return"N/A";var e=split_date(t)[0],i=split_date(t)[1],r=split_date(t)[2];return(e=zero_fill(Number(e)))+"."+(i=zero_fill(Number(i)))+"."+r}function zero_fill(t){return(t<10?"0":"")+t}function split_date(t){var e=t.split(".");return[e[0],e[1],e[2]]}function calculate_day_count(t,e,i){var r;r=i?0:1;var n=t.split("."),a=e.split("."),_=new Date(Number(n[2]),Number(n[1])-1,Number(n[0])),s=new Date(Number(a[2]),Number(a[1]-1),Number(a[0]));return Math.round((s-_)/864e5)+r}function is_numeric(t){return!isNaN(parseFloat(t))&&isFinite(t)}function is_it_leap_year(t){return t%4==0&&t%100!=0||t%400==0}function days_in_month(t,e){if(1===t||3===t||5===t||7===t||8===t||10===t||12===t)return 31;if(4===t||6===t||9===t||11===t)return 30;if(2===t&&is_it_leap_year(e))return 29;if(2===t&&!is_it_leap_year(e))return 28;throw_unexpected_exception("days_in_month")}function func_round(t){return t=Math.round(100*t)/100}function check_date_validity(t){var e=t.match(/^(\d{1,2})\.(\d{1,2})\.(\d{4})$/);if(!e)return!1;var i=Number(e[1]),r=Number(e[2]),n=Number(e[3]);if(r<1||r>12)return!1;var a=days_in_month(r,n);return!(i<1||i>a)}function number_is_valid(t){return!(isNaN(t)||"number"!=typeof t||t<0)}module.exports=Paydown;